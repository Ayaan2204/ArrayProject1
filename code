#include <stdio.h>
int a[100];

void PrintArray(arraysize);
int SumOfArray(arraysize);
void AscendingOrder(arraysize);
void DescendingOrder(arraysize);
int SearchArray(arraysize,search);
void InsertElement(arraysize);
void PrimeArray(arraysize);
void main()
{
    int arraysize;
    int i=0;
    int command;
    int p;
    int search;
    
    printf("Enter Array Size\n");
    scanf("%d",&arraysize);
    
    
    printf("Enter %d elements\n",arraysize);
    for(i=0;i<arraysize;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=0;i<arraysize;i++)
    {
        printf("a[%d]=%d\n",i,a[i]);
    }
    
    printf("Enter\n 1:PrintArray\n 2:SumOfArray\n 3:AscendingOrder\n 4:DescendingOrder\n 5:SearchArray\n 6:InsertElement\n ");
    scanf("%d",&command);
    
    
    switch(command)
    {
        case 1:
        PrintArray(arraysize);
        break;
        
        case 2:
        p=SumOfArray(arraysize);
        printf("Sum of array is %d",p);
        break;
        
        case 3:
        AscendingOrder(arraysize);
        break;
        
        case 4:
        DescendingOrder(arraysize);
        break;
        
        case 5:
        printf("Search number\n");
        scanf("%d",&search);
        p=SearchArray(arraysize,search);
        if(p>=0)
        {
            printf("%d is present at address %d\n",search,p);
        }
        else
        {
            printf("%d is not available\n",search);
        }
        break;
        
        case 6:
        InsertElement(arraysize);
        break;
        
        default:
        PrimeArray(arraysize);
        break;
        
    }
} 

void PrintArray(arraysize)
{
    int i;
    for(i=0;i<arraysize;i++)
    {
        printf("a[%d]=%d\n",i,a[i]);
    }
}
    
    
int SumOfArray(arraysize)
{
    int i;
    int sum=0;
    for(i=0;i<arraysize;i++)
    {
        sum=sum+a[i];
    }
    return sum;
}
    
    
void AscendingOrder(arraysize)
{
    
    int i=0;
    int j=0;
    int n=arraysize;
    int max;
    int dummy;
    for(i=0;i<n;i++)
    {
        max=a[i];
        for(j=i+1;j<n;j++)
        {
            if(max>a[j])
            {
                dummy=max;
                max=a[j];
                a[j]=dummy;
            }
            
        }
        a[i]=max;
    }
    
     for(i=0;i<n;i++)
    {
        printf("a[%d]=%d\n",i,a[i]);
    }

}

void DescendingOrder(arraysize)
{
    int i=0;
    int j=0;
    int n=arraysize;
    int max;
    int dummy;
    for(i=0;i<n;i++)
    {
        max=a[i];
        for(j=i+1;j<n;j++)
        {
            if(max<a[j])
            {
                dummy=max;
                max=a[j];
                a[j]=dummy;
            }
            
        }
        a[i]=max;
    }
    
     for(i=0;i<n;i++)
    {
        printf("a[%d]=%d\n",i,a[i]);
    }

}

int SearchArray(arraysize,search)
{
    int i;
    
    int ans=-2;
    int flag=0;
    
    for(i=0;i<arraysize;i++)
    {
        if(a[i]==search)
        {
            ans=i;
            flag=1;
        }
    }
    return ans;
}

void InsertElement(arraysize)
{
    int p;
    int q;
    int flag=0;
    int i=arraysize;
    
    printf("Enter element to be inserted\n");
    scanf("%d",&p);
    while(flag==0)
    {
        printf("Enter address between 0 and %d\n",arraysize);
        scanf("%d",&q);
        if(q>=0&&q<=arraysize)
        {
            flag=1;
        }
    }
    
    for(i=arraysize;i>q;i--)
    {
        
        a[i]=a[i-1];
    }
    a[q]=p;
    for(i=0;i<=arraysize;i++)
    {
        printf("a[%d]=%d\n",i,a[i]);
    }
    
    
}
void PrimeArray(arraysize)
{
    int i;
    int divisor;
    int flag=0;
    int b[100];
    int j=0;
    for(i=0;i<arraysize;i++)
    {
        flag=0;
        for(divisor=2;divisor<a[i];divisor++)
        {
            if(a[i]%divisor==0)
            {
                flag=1;
            }
        }
        
        if(flag==0)
        {
            b[j]=a[i];
            j++;
        }
    }
    for(i=0;i<j;i++)
    {
        printf("b[%d]=%d\n",i,b[i]);
        
    }
}


    
